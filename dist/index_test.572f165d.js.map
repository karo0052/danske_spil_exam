{"version":3,"sources":["mikkel_repository/index_test.js"],"names":["window","addEventListener","init","action","myJSON","playerHealth","collectedTrash","isGameOver","gameContainer","document","querySelector","console","log","windowClicked","getJSON","fetch","then","jsonData","json","createElements","forEach","element","newDiv","createElement","classList","add","dataset","status","style","backgroundImage","appendChild","placeElements","e","target","removeElement","incrementCounter","startGame","elementArray","querySelectorAll","clientWidth","counter","length","stringifyNumb","getCoordinateWithinBox","toString","transform","container","elem","Math","floor","random","playerHealthStatus","checkValidity","setTimeout","checkHealth","gameOver","addAnimation","Xpos","getBoundingClientRect","x","pointerEvents","decreaseHealth","healthBar","backgroundColor","posX","textContent"],"mappings":"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","file":"index_test.572f165d.js","sourceRoot":"..","sourcesContent":["\"use strict\";\n\nwindow.addEventListener(\"DOMContentLoaded\", init);\n\nlet action = \"\";\nlet myJSON;\nlet playerHealth = 3;\nlet collectedTrash = 0;\nlet isGameOver = false;\nconst gameContainer = document.querySelector(\"#game_container\");\n\nfunction init() {\n  console.log(\"init kørt\");\n  document\n    .querySelector(\"#game_container\")\n    .addEventListener(\"mousedown\", windowClicked);\n  getJSON();\n}\n\nfunction getJSON() {\n  fetch(\"garbage.json\")\n    .then(jsonData => jsonData.json())\n    .then(jsonData => {\n      myJSON = jsonData;\n      createElements();\n    });\n}\n\nfunction createElements() {\n  myJSON.forEach(element => {\n    let newDiv = document.createElement(\"div\");\n    newDiv.classList.add(\"element\");\n    newDiv.dataset.status = \"trash\";\n    newDiv.dataset.action = \"remove\";\n    newDiv.style.backgroundImage = `url(\"../img/${element}.svg\")`;\n    // newDiv.style.backgroundColor = \"red\";\n    gameContainer.appendChild(newDiv);\n  });\n  placeElements();\n}\n\nfunction windowClicked(e) {\n  console.log(\"windowclicked kørt\");\n  action = e.target.dataset.action;\n\n  if (action === \"remove\") {\n    console.log(\"if statement kørt\");\n    removeElement(e);\n    incrementCounter();\n  }\n  if (action === \"start\") {\n    startGame();\n  }\n\n  console.log(action);\n}\n\nfunction placeElements() {\n  const elementArray = document.querySelectorAll(\"[data-status=trash]\");\n\n  console.log(gameContainer.clientWidth);\n\n  // place elements randomly on X axis using transform translate\n  for (let counter = 0; counter < elementArray.length; counter++) {\n    let stringifyNumb = getCoordinateWithinBox(\n      gameContainer,\n      elementArray[counter]\n    ).toString();\n\n    elementArray[\n      counter\n    ].style.transform = `translate(${stringifyNumb}px, -200px)`;\n  }\n}\n\nfunction getCoordinateWithinBox(container, elem) {\n  return Math.floor(Math.random() * (container.clientWidth - elem.clientWidth));\n}\n\nfunction startGame() {\n  console.log(\"startGame kørt\");\n  // Can this be done by using forEach? note the delay!\n  playerHealthStatus();\n  checkValidity();\n}\n\nfunction checkValidity() {\n  const elementArray = document.querySelectorAll(\"[data-status=trash]\");\n  for (let counter = 0; counter < elementArray.length; counter++) {\n    setTimeout(() => {\n      checkHealth(elementArray[counter], counter);\n    }, 1000 * counter);\n  }\n}\nfunction checkHealth(element, counter) {\n  // console.log(playerHealth);\n  if (!isGameOver && playerHealth === 0) {\n    isGameOver = true;\n    gameOver();\n  } else {\n    addAnimation(element, counter);\n  }\n}\n\nfunction addAnimation(element, counter) {\n  // console.log(element);\n  let Xpos = element.getBoundingClientRect().x;\n\n  if (counter <= 5) {\n    // element.classList.add(\"floatDown\");\n    element.style.transform = `translate(${Xpos}px, 580px)`;\n    element.classList.add(\"float_speed_1\");\n  }\n  if (counter > 5 && counter <= 10) {\n    element.style.transform = `translate(${Xpos}px, 580px)`;\n    element.classList.add(\"float_speed_2\");\n  }\n  if (counter >= 11 && counter <= 15) {\n    element.style.transform = `translate(${Xpos}px, 580px)`;\n    element.classList.add(\"float_speed_3\");\n  }\n  if (counter >= 16 && counter <= 31) {\n    element.style.transform = `translate(${Xpos}px, 580px)`;\n    element.classList.add(\"float_speed_4\");\n  }\n}\n\nfunction playerHealthStatus() {\n  console.log(\"playerHealthStatus\");\n  const elementArray = document.querySelectorAll(\"[data-status=trash]\");\n  elementArray.forEach(element => {\n    element.addEventListener(\"transitionend\", () => {\n      element.style.pointerEvents = \"none\";\n      if (element.dataset.status === \"trash\") {\n        playerHealth--;\n        decreaseHealth();\n        console.log(playerHealth);\n      }\n    });\n  });\n}\n\nfunction decreaseHealth() {\n  const healthBar = document.querySelector(\"[data-status=no-damage]\");\n}\n\nfunction gameOver() {\n  //\n  const elementArray = document.querySelectorAll(\"[data-status=trash]\");\n  elementArray.forEach(element => {\n    element.dataset.status = \"clean\";\n  });\n  console.log(\"gameover\");\n}\n\nfunction removeElement(e) {\n  // console.log(e);\n  // console.log(\"removeElement kørt\");\n  // add if statement that defines that if the element is too far down on the page then it can't be clicked\n  e.target.dataset.status = \"clean\";\n  e.target.style.backgroundColor = \"initial\";\n  e.target.style.backgroundImage = 'url(\"../img/bubbles.png\")';\n  // reset placement to be the original one\n  let posX = e.target.getBoundingClientRect().x;\n  e.target.style.transform = `translate(${posX}px, -200px)`;\n}\n\nfunction incrementCounter() {\n  collectedTrash++;\n  document.querySelector(\"#score h1\").textContent = collectedTrash;\n  // Add counter to field in HTML to show amount of pieces collected\n  // console.log(collectedTrash);\n}\n"]}